# Generated by Django 2.1.7 on 2020-01-11 16:53

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('MN_Id_Menu', models.BigAutoField(primary_key=True, serialize=False)),
                ('MN_Nombre_Menu', models.CharField(max_length=50)),
                ('MN_Url_Menu', models.CharField(max_length=30)),
                ('MN_Icono_Menu', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'TBL_Menus',
            },
        ),
        migrations.CreateModel(
            name='MenuUsuario',
            fields=[
                ('MN_USR_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('MN_USR_Menu_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FK_Menus_Usuarios_Menu_Id', to='Administrador.Menu')),
            ],
            options={
                'db_table': 'TBL_Menus_Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('PRM_Id_Permiso', models.BigAutoField(primary_key=True, serialize=False)),
                ('PRM_Nombre_Permiso', models.CharField(max_length=50)),
                ('PRM_Slug_Permiso', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'TBL_Permisos',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('RLS_Id_Rol', models.BigAutoField(primary_key=True, serialize=False)),
                ('RLS_Nombre_Rol', models.CharField(max_length=30)),
                ('RLS_Descripcion_Rol', models.TextField()),
            ],
            options={
                'db_table': 'TBL_Roles',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('USR_Id_Usuario', models.BigAutoField(primary_key=True, serialize=False)),
                ('USR_Tipo_Documento_Usuario', models.CharField(max_length=30)),
                ('USR_Documento_Usuario', models.CharField(max_length=50)),
                ('USR_Nombres_Usuario', models.CharField(max_length=50)),
                ('USR_Apellidos_Usuario', models.CharField(max_length=50)),
                ('USR_Direccion_Usuario', models.CharField(max_length=50)),
                ('USR_Telenofo_Usuario', models.CharField(max_length=12)),
                ('USR_Email_Usuario', models.EmailField(max_length=254)),
                ('USR_Nombre_Usuario', models.CharField(max_length=15)),
                ('USR_Contrasena_Usuario', models.TextField()),
            ],
            options={
                'db_table': 'TBL_Usuarios',
            },
        ),
        migrations.CreateModel(
            name='UsuarioPermiso',
            fields=[
                ('USR_PRM_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('USR_PRM_Permiso_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FK_Usuarios_Permisos_Permiso_Id', to='Administrador.Permiso')),
                ('USR_PRM_Usuario_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FK_Usuarios_Permisos_Usuario_Id', to='Administrador.Usuario')),
            ],
            options={
                'db_table': 'TBL_Usuarios_Permisos',
            },
        ),
        migrations.CreateModel(
            name='UsuarioRol',
            fields=[
                ('USR_RLS_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('USR_RLS_Rol_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FK_Usuarios_Roles_Rol_Id', to='Administrador.Rol')),
                ('USR_RLS_Usuario_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FK_Usuarios_Roles_Usuario_Id', to='Administrador.Usuario')),
            ],
            options={
                'db_table': 'TBL_Usuarios_Roles',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='menuusuario',
            name='MN_USR_Usuario_Id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FK_Menus_Usuarios_Usuario_Id', to='Administrador.Usuario'),
        ),
    ]
